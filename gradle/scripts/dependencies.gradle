apply from: 'gradle/scripts/helpers.gradle'

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = 'Modrinth'
                url = 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "me.shedaniel"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
        name = 'ModMaven'
        url = "https://modmaven.dev"
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    modCompileOnly("mezz.jei:jei-1.16.5:7.8.0.1013")

    modCompileOnly("curse.maven:titanium-287342:5174863")
    modCompileOnly("curse.maven:industrial-foregoing-266515:5334823")

    modCompileOnly("curse.maven:masterful-machinery-423476:4082604")

    modCompileOnly("curse.maven:just-enough-resources-jer-240630:4526612")

    modCompileOnly("dev.latvian.mods:kubejs-forge:1605.3.19-build.299") {
        exclude([module: "rhino-forge"])
    }

    modCompileOnly("curse.maven:farmers-delight-398521:3765350")

    // additional dependencies can be specified using loom's regular format
    // specifying a "mod" dependency (like modImplementation or modApi)
    // will cause loom to remap the file to your specified mappings

    // in this example, we'll be adding JEI as a dependency
    // according to their developer example on GitHub
    // see: https://github.com/mezz/JustEnoughItems/wiki/Getting-Started
    // compile against the JEI API but do not include it at runtime
    // don't worry about loom "not finding a forge mod" here,
    // JEI's api just doesn't have any class with an @Mod annotation
    // modCompileOnly "mezz.jei:jei-1.16.5:${jei_version}:api"
    // at runtime, use the full JEI jar
    // modRuntimeOnly "mezz.jei:jei-1.16.5:${jei_version}"

    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }

    // Shadowing Jars
    // like this:
    // shade("mezz.jei:jei-1.16.5:${jei_version}")
}